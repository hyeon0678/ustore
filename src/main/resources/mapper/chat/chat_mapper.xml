<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ustore.chat.dao.ChatDao">
<insert id="insertChatRoom" 
	useGeneratedKeys="true"
	keyProperty="chatRoomIdx" keyColumn="chat_room_idx">
	INSERT INTO chat_rooms (chat_room_name, is_individual, reg_by)
	VALUES(#{chatRoomName}, #{isIndividual}, #{regBy});
</insert>

<insert id="insertChatParticipants">
	INSERT INTO chat_participants (chat_room_idx, emp_idx)
	VALUES(#{param1}, #{param2});
</insert>

<select id="selectChatRoomList" resultType="chatRoomDto">
	SELECT cr.chat_room_idx, cr.chat_room_name, 
	(SELECT MAX(csh.chat_date) 
		FROM chat_sent_history csh
		WHERE csh.chat_room_idx = cp.chat_room_idx) max_sent_date,
	(SELECT MAX(csh.chat_date)
	FROM chat_sent_history csh 
	LEFT OUTER JOIN chat_received_history crh 
	ON crh.chat_room_idx = csh.chat_room_idx  
	WHERE crh.chat_room_idx = cp.chat_room_idx) max_received_date,
	(SELECT COUNT(crh.`read`) 
		FROM chat_received_history crh
		WHERE crh.chat_room_idx = cp.chat_room_idx and crh.`read` like 'N') read_cnt
	FROM  chat_participants cp 
	LEFT OUTER JOIN chat_rooms cr
	ON cp.chat_room_idx = cr.chat_room_idx 
	WHERE cp.emp_idx = #{param1}
</select>

<select id="selectChatPrinciple" resultType="Participant">
	SELECT e2.emp_name AS name, c.common_type AS position, d.dept_name AS depertment, e2.emp_idx 
	FROM chat_participants cp 
	LEFT OUTER JOIN employee e2 
	ON cp.emp_idx = e2.emp_idx
	LEFT OUTER JOIN department d 
	ON e2.dept_id = d.dept_id 
	LEFT OUTER JOIN common c 
	ON e2.`position` = c.common_idx 
	WHERE cp.chat_room_idx = #{param1}
</select>

<select id="selectReceiveMember" resultType="String">
	SELECT cp.emp_idx 
	FROM chat_participants cp 
	WHERE cp.chat_room_idx = #{param1} AND cp.emp_idx NOT LIKE #{param2}
</select>

<insert id="insertSendMsg"
	useGeneratedKeys="true"
	keyProperty="chatIdx" keyColumn="chat_idx">
	INSERT INTO chat_sent_history(sender,chat_room_idx,chat_content)
	VALUES(#{sender},#{roomNum},#{data});
</insert>

<insert id="insertReceivedMsg">
	insert into chat_received_history (chat_idx,chat_room_idx,receiver)
	values(#{chatIdx},#{roomNum},#{receiver});
</insert>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ustore.approval.dao.ApprovalDao">

	<select id="getEmployeeInfo" resultType="EmployeeDto">
		SELECT
		    e.*,
		    c.common_type AS positionType,
		    d.dept_name AS deptName
		FROM
		    employee e
		JOIN
		    common c ON e.position = c.common_idx
		JOIN
		    department d ON e.dept_id = d.dept_id
		WHERE
		    e.emp_idx = #{param1};
	</select>
	
	<insert id="tempSaveContent" parameterType="ApprovalDto">
		<selectKey keyProperty="apprIdx" order="AFTER" resultType="Integer">
	       select lastval(appr_idx_sequence)
	    </selectKey>
	    
		<if test="commonIdx == 30">
            INSERT INTO business_draft (appr_idx, emp_idx, appr_subject, appr_content,  
            	appr_status, doc_step)
            VALUES (nextval(appr_idx_sequence), #{empIdx}, #{apprSubject}, #{apprContent}, 43, 1);
        </if>
        <if test="commonIdx == 31">
        	INSERT INTO payment_resolution (appr_idx, emp_idx, appr_subject,  
            	appr_status, doc_step, order_num)
            VALUES (nextval(appr_idx_sequence), #{empIdx}, #{apprSubject}, 43, 1, #{orderNum});            
        </if>
        <if test="commonIdx == 32">
            INSERT INTO req_vacation (appr_idx, emp_idx, appr_subject, 
                appr_status, doc_step, leave_type, leave_start_date, leave_end_date, leave_reason, leave_days)
            VALUES (nextval(appr_idx_sequence), #{empIdx}, #{apprSubject}, 43, 1, 
            	#{leaveType}, #{leaveStartDate}, #{leaveEndDate}, #{leaveReason}, #{leaveDays});
        </if>
	</insert>
	
	<update id="updateTempSaveContent" parameterType="ApprovalDto">
		<if test="commonIdx == 30">
            UPDATE business_draft SET appr_subject=#{apprSubject}, appr_content=#{apprContent}	
            WHERE appr_idx=#{apprIdx}            	
	    </if>
        <if test="commonIdx == 31">
	        UPDATE payment_resolution SET appr_subject=#{apprSubject}, 
	        	appr_content=#{apprContent}, order_num=#{orderNum}
            WHERE appr_idx=#{apprIdx}            	
	    </if>
        <if test="commonIdx == 32">
	        UPDATE req_vacation SET appr_subject=#{apprSubject}, leave_type=#{leaveType},
	        	leave_start_date=#{leaveStartDate},leave_end_date=#{leaveEndDate},leave_reason=#{leaveReason}
	        WHERE appr_idx=#{apprIdx}
	    </if>
	</update>
	   
	<insert id="saveContent" parameterType="ApprovalDto">
		<selectKey keyProperty="apprIdx" order="AFTER" resultType="Integer">
	       select lastval(appr_idx_sequence)
	    </selectKey>
		<if test="commonIdx == 30">
            INSERT INTO business_draft (appr_idx, emp_idx, appr_subject, appr_content,  
            	appr_status, doc_step)
            VALUES (nextval(appr_idx_sequence), #{empIdx}, #{apprSubject}, #{apprContent}, 40, 1);
        </if>
        <if test="commonIdx == 31">
        	INSERT INTO payment_resolution (appr_idx, emp_idx, appr_subject,  
            	appr_status, doc_step, order_num)
            VALUES (nextval(appr_idx_sequence), #{empIdx}, #{apprSubject}, 40, 1, #{orderNum});            
        </if>
        <if test="commonIdx == 32">
            INSERT INTO req_vacation (appr_idx, emp_idx, appr_subject, 
                appr_status, doc_step, leave_type, leave_start_date, leave_end_date, leave_reason)
            VALUES (nextval(appr_idx_sequence), #{empIdx}, #{apprSubject}, 40, 1, 
            	#{leaveType}, #{leaveStartDate}, #{leaveEndDate}, #{leaveReason});
        </if>
	</insert>
	
	<insert id="saveApprLine" parameterType="ApprovalDto">    
	        INSERT INTO approval_line (emp_idx, appr_idx, approver, appr_order, appr_confirm, appr_type_idx)
	        VALUES (#{empIdx}, #{apprIdx}, #{approver}, #{apprOrder}, #{apprConfirm}, #{apprTypeIdx})
	</insert>
	
	<insert id="saveApprRecv" parameterType="ApprovalDto">		    
	        INSERT INTO recipient (emp_idx, appr_idx, receiver)
	        VALUES (#{empIdx}, #{apprIdx}, #{receiver})	    
	</insert>

	<select id="getTempList" resultType="ApprovalDto">
		SELECT appr_idx, appr_subject, appr_status, appr_type_idx, appr_submit_date
		FROM business_draft
		WHERE emp_idx = #{emp_idx} AND appr_status = 43
		UNION
		SELECT appr_idx, appr_subject, appr_status, appr_type_idx, appr_submit_date
		FROM payment_resolution
		WHERE emp_idx = #{emp_idx} AND appr_status = 43
		UNION
		SELECT appr_idx, appr_subject, appr_status, appr_type_idx, appr_submit_date
		FROM req_vacation
		WHERE emp_idx = #{emp_idx} AND appr_status = 43;		
	</select>	
	

	<select id="getApprLine" resultType="ApprovalDto" parameterType="int">
		SELECT al.approver, al.appr_order, al.appr_confirm, d.dept_name, c.common_type AS positionType 
	    FROM approval_line al
	    JOIN employee e ON al.approver = e.emp_name
	    LEFT JOIN department d ON e.dept_id = d.dept_id
	    LEFT JOIN common c ON e.position = c.common_idx
	    WHERE al.appr_idx = #{param1}
	</select>
	
	<select id="getRecv" resultType="ApprovalDto" parameterType="int">
		SELECT r.receiver, d.dept_name, c.common_type AS positionType 
	    FROM recipient r
	    JOIN employee e ON r.receiver = e.emp_name
	    LEFT JOIN department d ON e.dept_id = d.dept_id
	    LEFT JOIN common c ON e.position = c.common_idx
	    WHERE r.appr_idx = #{param1}
	</select>
	
	<select id="getContent" resultType="ApprovalDto" parameterType="int">
		<if test="common_idx == 30">
            SELECT appr_subject, appr_content, appr_status, doc_step 
            FROM business_draft
            WHERE appr_idx=#{param1}
        </if>
        <if test="common_idx == 31">
        	SELECT appr_subject, appr_status, doc_step, order_num 
        	FROM payment_resolution          
        	WHERE appr_idx=#{param1}
        </if>
        <if test="common_idx == 32">
            SELECT appr_subject, appr_status, doc_step, leave_type, leave_start_date, 
            	leave_end_date, leave_reason, leave_days 
            FROM req_vacation
            WHERE appr_idx=#{param1}
        </if>
	</select>
	
	
	
	
	
	<!-- <select id="getMyApprList" resultType="ApprovalDto" parameterType="map">
		SELECT appr_idx, appr_subject, appr_status, appr_type_idx, appr_submitdate
		FROM business_draft
		WHERE emp_idx = #{emp_idx} AND appr_status in (40, 41, 42)
		UNION
		SELECT appr_idx, appr_subject, appr_status, appr_type_idx, appr_submitdate
		FROM payment_resolution
		WHERE emp_idx = #{emp_idx} AND appr_status in (40, 41, 42)
		UNION
		SELECT appr_idx, appr_subject, appr_status, appr_type_idx, appr_submitdate
		FROM req_vacation
		WHERE emp_idx = #{emp_idx} AND appr_status in (40, 41, 42)		
	</select>	
	
	<select id="getReqApprList" resultType="ApprovalDto" parameterType="map">
		SELECT appr_idx, appr_subject, appr_status, appr_type_idx, appr_submitdate
		FROM business_draft
		WHERE emp_idx = #{emp_idx} AND appr_status = 40
		UNION
		SELECT appr_idx, appr_subject, appr_status, appr_type_idx, appr_submitdate
		FROM payment_resolution
		WHERE emp_idx = #{emp_idx} AND appr_status = 40
		UNION
		SELECT appr_idx, appr_subject, appr_status, appr_type_idx, appr_submitdate
		FROM req_vacation
		WHERE emp_idx = #{emp_idx} AND appr_status = 40		
	</select>
	
	<select id="getTeamApprList" resultType="ApprovalDto" parameterType="map">
		SELECT bd.appr_idx, bd.appr_subject, bd.appr_status, bd.appr_type_idx, bd.appr_submitdate
		FROM business_draft bd
		JOIN employee e ON bd.emp_idx = e.emp_idx
		WHERE e.dept_id = (SELECT dept_id FROM employee WHERE emp_idx = #{emp_idx}) 
		AND bd.appr_status = 41;
		UNION
		SELECT appr_idx, appr_subject, appr_status, appr_type_idx, appr_submitdate
		FROM payment_resolution
		WHERE emp_idx = #{emp_idx} AND appr_status = 41
		UNION
		SELECT appr_idx, appr_subject, appr_status, appr_type_idx, appr_submitdate
		FROM req_vacation
		WHERE emp_idx = #{emp_idx} AND appr_status = 41;		
	</select> -->

</mapper>